[package]
name = "starknet-crypto"
version = "0.2.0"
authors = ["Jonathan LEI <me@xjonathan.dev>"]
license = "MIT OR Apache-2.0"
edition = "2021"
readme = "README.md"
repository = "https://github.com/xJonathanLEI/starknet-rs"
homepage = "https://starknet.rs/"
description = """
Low-level cryptography utilities for Starknet
"""
keywords = ["ethereum", "starknet", "web3"]

[dependencies]
starknet-crypto-codegen = { version = "0.1.0", path = "../starknet-crypto-codegen", default-features = false }
starknet-curve = { version = "0.1.0", path = "../starknet-curve", default-features = false }
starknet-ff = { version = "0.2.0", path = "../starknet-ff", default-features = false }
crypto-bigint = { version = "0.4.9", default-features = false }
hmac = { version = "0.12.1", default-features = false }
num-bigint = { version = "0.4.3", default-features = false }
num-integer = { version = "0.1.44", default-features = false }
num-traits = { version = "0.2.14", default-features = false }
rfc6979 = { version = "0.3.1", default-features = false }
sha2 = { version = "0.10.6", default-features = false }
thiserror-no-std = { version = "2.0.2", default-features = false }
zeroize = { version = "1.5.0", default-features = false }
hex = { version = "0.4.3", default-features = false }
hashbrown = { version = "0.13.2", default-features = false }

[features]
default = ["std"]
std = [
    "serde/std",
    "starknet-ff/std",
    "starknet-curve/std",
    "hex/std",
    "starknet-crypto-codegen/std",
]
alloc = [
    "serde/std",
    "starknet-ff/alloc",
    "starknet-curve/alloc",
    "hex/alloc",
    "starknet-crypto-codegen/alloc",
]
bigdecimal = ["starknet-curve/bigdecimal", "starknet-ff/bigdecimal"]

[dev-dependencies]
criterion = { version = "0.4.0", default-features = false }
hex = "0.4.3"
hex-literal = "0.3.4"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.74"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.29"

[[bench]]
name = "pedersen_hash"
harness = false

[[bench]]
name = "ecdsa_get_public_key"
harness = false

[[bench]]
name = "ecdsa_sign"
harness = false

[[bench]]
name = "ecdsa_verify"
harness = false

[[bench]]
name = "rfc6979_generate_k"
harness = false
